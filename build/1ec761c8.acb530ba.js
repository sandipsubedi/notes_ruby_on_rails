(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{142:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=i.a.createContext({}),o=function(e){var t=i.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=o(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=o(n),b=r,m=p["".concat(c,".").concat(b)]||p[b]||d[b]||s;return n?i.a.createElement(m,a(a({ref:t},u),{},{components:n})):i.a.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,c=new Array(s);c[0]=b;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var u=2;u<s;u++)c[u]=n[u];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return o}));var r=n(3),i=n(7),s=(n(0),n(142)),c={},a={unversionedId:"rails/distinct_rails",id:"rails/distinct_rails",isDocsHomePage:!1,title:"distinct_rails",description:"Distinct in Rails:",source:"@site/docs/rails/distinct_rails.md",slug:"/rails/distinct_rails",permalink:"/docs/rails/distinct_rails",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/rails/distinct_rails.md",version:"current"},l=[{value:"Mostly used with Select:",id:"mostly-used-with-select",children:[]},{value:"If nothing is passed, id is used:",id:"if-nothing-is-passed-id-is-used",children:[]},{value:"While using with Pluck, it uses the items in the pluck to make it distinct.",id:"while-using-with-pluck-it-uses-the-items-in-the-pluck-to-make-it-distinct",children:[]}],u={toc:l};function o(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"distinct-in-rails"},"Distinct in Rails:"),Object(s.b)("h3",{id:"mostly-used-with-select"},"Mostly used with Select:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),"Model.select(:rating).distinct\n")),Object(s.b)("h3",{id:"if-nothing-is-passed-id-is-used"},"If nothing is passed, id is used:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),'[6] pry(main)> User.all.distinct.count\n   (2.3ms)  SELECT COUNT(DISTINCT "users"."id") FROM "users"\n=> 165\n')),Object(s.b)("h3",{id:"while-using-with-pluck-it-uses-the-items-in-the-pluck-to-make-it-distinct"},"While using with Pluck, it uses the items in the pluck to make it distinct."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Single")),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),'User.distinct.pluck(:name).count\n   (0.9ms)  SELECT DISTINCT "users"."name" FROM "users"\n=> 165\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Multiple")),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),'User.distinct.pluck(:name, :shortname).count\n(0.9ms)  SELECT DISTINCT "users"."name", "users"."shortname" FROM "users"\n')))}o.isMDXComponent=!0}}]);