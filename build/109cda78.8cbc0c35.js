(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{142:function(e,r,n){"use strict";n.d(r,"a",(function(){return b})),n.d(r,"b",(function(){return f}));var t=n(0),a=n.n(t);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function c(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?c(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function u(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var r=a.a.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},b=function(e){var r=p(e.components);return a.a.createElement(s.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},y=a.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),b=p(n),y=t,f=b["".concat(c,".").concat(y)]||b[y]||l[y]||o;return n?a.a.createElement(f,i(i({ref:r},s),{},{components:n})):a.a.createElement(f,i({ref:r},s))}));function f(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,c=new Array(o);c[0]=y;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:t,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},74:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return c})),n.d(r,"metadata",(function(){return i})),n.d(r,"toc",(function(){return u})),n.d(r,"default",(function(){return p}));var t=n(3),a=n(7),o=(n(0),n(142)),c={},i={unversionedId:"ruby/ruby_vs_java/increment_operators",id:"ruby/ruby_vs_java/increment_operators",isDocsHomePage:!1,title:"increment_operators",description:"Ruby Vs Java",source:"@site/docs/ruby/ruby_vs_java/increment_operators.md",slug:"/ruby/ruby_vs_java/increment_operators",permalink:"/docs/ruby/ruby_vs_java/increment_operators",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/ruby/ruby_vs_java/increment_operators.md",version:"current"},u=[{value:"Increasing in Java:",id:"increasing-in-java",children:[]},{value:"Increasing in Ruby:",id:"increasing-in-ruby",children:[]}],s={toc:u};function p(e){var r=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},s,n,{components:r,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"ruby-vs-java--increment-operators"},"Ruby Vs Java : Increment Operators:"),Object(o.b)("h3",{id:"increasing-in-java"},"Increasing in Java:"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-java"}),"count++;\n")),Object(o.b)("h3",{id:"increasing-in-ruby"},"Increasing in Ruby:"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-ruby"}),"count += 1\n")))}p.isMDXComponent=!0}}]);