(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{132:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return u}));var r=a(3),n=a(7),o=(a(0),a(142)),s={},l={unversionedId:"ruby/params_ruby",id:"ruby/params_ruby",isDocsHomePage:!1,title:"params_ruby",description:"Params Ruby:",source:"@site/docs/ruby/params_ruby.md",slug:"/ruby/params_ruby",permalink:"/docs/ruby/params_ruby",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/ruby/params_ruby.md",version:"current"},c=[{value:"Different types of parameter in Ruby:",id:"different-types-of-parameter-in-ruby",children:[{value:"1. Positional Params",id:"1-positional-params",children:[]},{value:"2. Keyword Param",id:"2-keyword-param",children:[]},{value:"3. Variable Aruments:",id:"3-variable-aruments",children:[]},{value:"Order",id:"order",children:[]},{value:"Benefits of Keyword params:",id:"benefits-of-keyword-params",children:[]}]},{value:"Parameter vs Arguments:",id:"parameter-vs-arguments",children:[]},{value:"Interesting Facts:",id:"interesting-facts",children:[{value:"1. Parentheses for paramters are optional:",id:"1-parentheses-for-paramters-are-optional",children:[]}]}],i={toc:c};function u(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"params-ruby"},"Params Ruby:"),Object(o.b)("h2",{id:"different-types-of-parameter-in-ruby"},"Different types of parameter in Ruby:"),Object(o.b)("h3",{id:"1-positional-params"},"1. Positional Params"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),"def sum(salary, bonus, tax)\n  salary + bonus - tax\nend\n\nsum(100, 10, 30) # => 80\n")),Object(o.b)("h3",{id:"2-keyword-param"},"2. Keyword Param"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Introduced at Ruby 2.0."),Object(o.b)("li",{parentName:"ul"},"Keyword arguments allow us to switch the order of the arguments, without affecting the behavior of the method."),Object(o.b)("li",{parentName:"ul"},"Also known as named parameters, keyword arguments, required keyword arguments.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),"def sum(salary:, bonus:, tax:)\n  salary + bonus - tax\nend\n\nsum(salary: 100, bonus: 10, tax: 30) # => 80\n")),Object(o.b)("h4",{id:"passing-default-value"},"Passing default value:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),"def sum(salary:, bonus: 10, tax:)\n  salary + bonus - tax\nend\n\nsum(salary: 100, tax: 30) # => 80\n")),Object(o.b)("h3",{id:"3-variable-aruments"},"3. Variable Aruments:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),"\ndef print_all(**args)\n  print args\nend\nprint_all(1, 2, 3) # => \n")),Object(o.b)("p",null,"The **x is the same as variable arguments, but for keyword arguments. It will be a hash instead of an array."),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},"Catch-all Argument:")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),"def print_all(*)\nend\n")),Object(o.b)("p",null,"This means that the method is accepting any arguments, but it\u2019s not doing anything with them. It\u2019s similar to using the underscore character (_) inside a block to show which arguments you aren\u2019t using."),Object(o.b)("h3",{id:"order"},"Order"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"required -> optional -> variable -> keyword\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),"def testing(a, b = 1, *c, d: 1, **x)\n  p a,b,c,d,x\nend\ntesting('a', 'b', 'c', 'd', 'e', d: 2, x: 1)\n")),Object(o.b)("h3",{id:"benefits-of-keyword-params"},"Benefits of Keyword params:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Order doesn't matter"),Object(o.b)("li",{parentName:"ul"},"If order chagges on the method parameter, argument doesn't have to change on all the places where it's called."),Object(o.b)("li",{parentName:"ul"},"Usually, the code clarity and maintainability gained from keyword arguments outweigh the terseness offered by positional arguments. ")),Object(o.b)("h2",{id:"parameter-vs-arguments"},"Parameter vs Arguments:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Argument:")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The entity that we can pass to the method during the call is called an argument.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Parameter:")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The entity that we declare when we define a method is called a parameter.")),Object(o.b)("p",null,"When we pass arguments to a method, the method creates a local variable which has the same name"),Object(o.b)("p",null,"In ruby, arguments inside a method are passed by reference"),Object(o.b)("h2",{id:"interesting-facts"},"Interesting Facts:"),Object(o.b)("h3",{id:"1-parentheses-for-paramters-are-optional"},"1. Parentheses for paramters are optional:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),"def method_name a,b,c\n  puts a,b,c,d \nend\n\nmethod_name 0,1,2\n")),Object(o.b)("p",null,"But it's recommended for redeability."))}u.isMDXComponent=!0},142:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=n.a.createContext({}),u=function(e){var t=n.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},b=function(e){var t=u(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),b=u(a),d=r,m=b["".concat(s,".").concat(d)]||b[d]||p[d]||o;return a?n.a.createElement(m,l(l({ref:t},i),{},{components:a})):n.a.createElement(m,l({ref:t},i))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var i=2;i<o;i++)s[i]=a[i];return n.a.createElement.apply(null,s)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);